/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.floatingwidget;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.util.TiActivityResultHandler;
import org.appcelerator.titanium.util.TiActivitySupport;

import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.provider.Settings;

import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;


@Kroll.module(name="Floatingwidget", id="ti.floatingwidget")
public class FloatingwidgetModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "FloatingwidgetModule";
	private static final boolean DBG = TiConfig.LOGD;
	 private static final int SYSTEM_ALERT_WINDOW_PERMISSION = 2084;
	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public FloatingwidgetModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		
	}

	private final class PermissionResultHandler implements TiActivityResultHandler {
		public void onError(Activity arg0, int arg1, Exception e) {
			Log.e(LCAT, e.getMessage());
		}

		public void onResult(Activity dummy, int requestCode, int resultCode,
				Intent data) {

		
			if (requestCode == SYSTEM_ALERT_WINDOW_PERMISSION) {
				
			}
		}
	}	

	// Properties
	@Kroll.method
	public void askPermission() {
        Intent intent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION,
                Uri.parse("package:" + TiApplication.getAppCurrentActivity().getPackageName()));
        final TiActivitySupport activitySupport = (TiActivitySupport) TiApplication
				.getInstance().getCurrentActivity();

        activitySupport.launchActivityForResult(intent, SYSTEM_ALERT_WINDOW_PERMISSION,new  PermissionResultHandler());
    }
	
	

	@Kroll.method
	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(LCAT, "set example property: " + value);
	}

}

